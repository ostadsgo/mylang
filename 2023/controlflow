/* for statment */


/* inifite loop */
for { }


/* loop over a collection */
for number in numbers { }

/* loop over collection with implicit iterable */
for numbers {
    print("Itrable is {it} at the moment.");
}

/* condition base loop */
i := 0;
for i < 10 {
    print("Counter is {i}");
    i += 1;
}


/* if expresion used to make conditions 
 * Returns last value as a result.
 *
*/

result: string;
number := int(input("Enter a number: "));

if number > 0 {
    result = "Positive";
}
elif number < 0 {
    result = "Negative";
}
else {
    result = "Zero";
}

/* equivlent above. */
result := if number > 0 => "Positive" elif number < 0 => "Negative" else => "Zero";


/* match expression */


result := match number {
    if number > 0 => "Positive";
    if number < 0 => "Negative";
    else => "Zero";
}


match number {
    1..10 => "In reange of 1 to 10";
    is int {
        for 1..10 => print("hello world!");
        "It is an integer";
    }
    is not int => "It is not an integer.";
    [1, 2, 3, 4] => "It is egiter one, tow , three or four.";
    if number == 1 or number == 2 => "It is 1 or 2";
    else => "None of the condition meets.";
}

/* Example: fizzbuzz */

fizzbuzz :: (number: int) -> string {
    result := if number % 15 == 0 => "FizzBuzz";
    elif number % 3 => "Fizz";
    ellif number % 5 => "Buzz";
    else => "Unknown";
    return result;
}

fizzbuzz :: (number: int) -> string =>
    if number % 15 == 0 => "FizzBuzz" elif number % 3 => "Fizz" elif number % 5 => "Buzz" else => "Unknown";


main :: () {
    number := int(input("Number: "));
    if number is not int {
        print("Enter a number plz.");
        exit();
    }
    res := fizzbuzz(number);
    print(res);
}


